root@ip-172-31-51-31:~/devopsworld# history
    1  apt-get install git
    2  git version
    3  which git
    4  ls -l
    5  mkdir devopsworld
    6  cd devopsworld/
    7  ls -la
    8  git init
    9  ls- l
   10  ls -l
   11  echo "hello world" > test
   12  ls- l
   13  ls -l
   14  git status
   15  git add test
   16  git status
   17  git commit -m "initial commit"
   18  git status
   19  ls -l
   20  git remote -v
   21  git remote add origin https://github.com/ankushgupta/devopsworld.git
   22  git rmeote -v
   23  git remote -v
   24  git push -u origin master
   25  cd ..
   26  git clone https://github.com/ankushgupta/devopsworld1.git
   27  ls -l
   28  cd devopsworld1
   29  ls -la
   30  history \
   31  git remote -v
   32  echo "hello world" > test
   33  git add .
   34  git commit -m "initial commit"
   35  git pus -u origin master
   36  git push -u origin master
   37  ls -l
   38  git pull
   39  ls -l
   40  echo "hello ayushi" > ayushi
   41  git add ayushi
   42  git commit -m "testing aysuhi"
   43  git push -u origin push
   44  git push -u origin master
   45  git log
   46  git pull
   47  ls -l
   48  git push -u origin master
   49  cd ..
   50  git clone https://github.com/ankushgupta/devopsworld1.git
   51  cd devopsworld1
   52  ls -l
   53  git branch
   54  git branch dev
   55  git branch
   56  git checkout dev
   57  git branch
   58  ls -l
   59  git push -u origin dev
   60  git checkout -b qa
   61  git branch
   62  git push -u origin qa
   63  echo "hello pramod" > pramod
   64  ls -l
   65  git status
   66  git add pramod
   67  git status
   68  git commit -m "adding pramodfile"
   69  git push -u origin qa
   70  git checkout master
   71  git pull
   72  git merge qa
   73  ls -l
   74  git push -u origin master
   75  git checkout dev
   76  echo "hello abhijeet" > abhijiteet
   77  echo "hello abhijeet" > abhijeet
   78  ls -l
   79  rm -rf abhijiteet
   80  ls -l
   81  git add abhijeet
   82  git commit -m "adding abhijeet"
   83  git push -u origin dev
   84  git log
   85  git diff e1d1f9f6a8e0c947d543645b2a5c730c73d949f0 d9d3b72823fb091c54b1c06287400b34c16c7c5e
   86  git branch
   87  echo "hello jagjot" > jagjot
   88  ls -l
   89  git status
   90  git stash -u
   91  git status
   92  ls -l
   93  git checkout qa
   94  echo "test" >test1
   95  git add test1
   96  git commit -m "adding test1"
   97  git push -u origin qa
   98  git checkout dev
   99  ls -l
  100  git stash pop
  101  ls-
  102  ls -l
  103  vi jagjot
  104  git add jagjot
  105  git commit -m "adding jagjot"
  106  git push -u origin dev
  107  git log
  108  git reset --hard e1d1f9f6a8e0c947d543645b2a5c730c73d949f0
  109  git log
  110  git revert 2196ecda7b7a8bf83fd4cbe53f933f8b1b83d105
  111  ls -l
  112  git log
  113  git pull
  114  ls -l
  115  git log
  116  git remote -v
  117  git branch
  118  vi function.c
  119  git add function.c
  120  git commit -m "function.c"
  121  git push -u origin dev
  122  git checkout master
  123  git pull
  124  ls -l
  125  git merge dev
  126  git push -u origin master
  127  ls -l
  128  cp function.c
  129  cp function.c /tmp
  130  git checkout qa
  131  ls -l
  132  git pull
  133  cp /tmp/function.c .
  134  vim function.c
  135  git add function.c
  136  git commit -m "adding function"
  137  git push -u origin qa
  138  git checkout master
  139  git merge qa
  140  vim function.c
  141  git add function.c
  142  git commit -m "resovle conflict"
  143  git push -u origin master
  144  ssh-keygen
  145  cat /root/.ssh/id_rsa.pub
  146  pef
  147  pwd
  148  cd ..
  149  git clone git@github.com:ankushgupta/testingrepo.git
  150  cd testingrepo/
  151  ls -l
  152  git remote -a
  153  git remote -v
  154  git config -list
  155  git config --list
  156  git branch -a
  157  cp /tmp/function.c .
  158  git add function.c
  159  git commit -m "adding function"
  160  git push -u origin master
  161  exit
  162  cd devopsworld1
  163  ls -l
  164  git log
  165  git config user.name
  166  git config user.name "Ankush"
  167  git config --global user.name "Ankush"
  168  git config --global user.email "ankushgupta@gmail.com"
  169  git config --list
  170  echo "testing username" > username
  171  git add username
  172  git commit -m "adding username:
  173  "
  174  git log
  175  git branch
  176  ls -
  177  ls -l
  178  git rm function.c
  179  git status
  180  git commit -m "deleting function"
  181  git push
  182  git log
  183  git reset 68f4af3f622b8d106fe62c93aca3779af164007f
  184  git push -u origin master
  185  git push -u origin master -f
  186  ls -l
  187  cd devopsworld1
  188  ls -l
  189  git branch
  190  git branch -a
  191  git checkout dev
  192  ls -l
  193  vi jagjot
  194  git add --all :/
  195  git commit -m "update jagjot file"
  196  git push -u origin dev
  197  git checkout qa
  198  git merge dev
  199  cat jagjot
  200  vi function.c
  201  git add .
  202  git commit -m
  203  git commit -m "merge dev branch"
  204  git push
  205  git push -f
  206  vi demo
  207  git stash -u
  208  git status
  209  git checkout dev
  210  ls -l
  211  vim jagjot
  212  git add --all :/
  213  git commit -m "fix doe"
  214  git push
  215  git checkout
  216  git checkout qa
  217  git stash pop
  218  ls -l
  219  git status
  220  pwd
  221  vim function.c
  222  git add .
  223  git branc -a
  224  git branch -a
  225  git log
  226  git branch
  227  git checkout -b base
  228  git status
  229  git add --all :/
  230  git commimt -m "b1"
  231  git push
  232  git log
  233  ls -l
  234  echo "b1" > b1
  235  git add b1
  236  git commimt -m "b1"
  237  git commit -m "b1"
  238  git push
  239  git log
  240  git rebase master
  241  gi tlog
  242  git log
  243  cd ..
  244  ls -l
  245  cd devopsworld
  246  ls -l
  247  git branch
  248  git branch -a
  249  git log
  250  git checkout -b base
  251  echo "b1" > b1
  252  git add b1
  253  git commit -m "b1"
  254  git push -u origin base
  255  git log
  256  git pull
  257  git rebase master
  258  git checkout master
  259  git pull
  260  git checkout base
  261  git log
  262  git rebase master
  263  git log
  264  history
  265  git conf-g
  266  git config
  267  git config --list
  268  ifconfig
  269  apt-get remove docker docker-engine docker.io containerd runc
  270  apt-get install     apt-transport-https     ca-certificates     curl     gnupg-agent     software-properties-common
  271  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  272  add-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"
  273  apt-get install docker-ce docker-ce-cli containerd.io
  274  docker version
  275  docker ps
  276  docker images
  277  docker search ubuntu
  278  docker pull ubuntun
  279  docker pull ubuntu
  280  docker images
  281  docker run -it ubuntu /bin/bash
  282  docker ps
  283  docker  ps -a
  284  docker run  -d -it ubuntu /bin/bash
  285  docker ps
  286  docker exec -it c90594e89195 /bin/bash
  287  docker ps
  288  docker run  -d -it ubuntu /bin/bash
  289  docker ps
  290  docker run  -d -it ubuntu /bin/bash
  291  docker ps
  292  docker run  -d -it ubuntu --name ritu /bin/bash
  293  docker ps
  294  docker run  -d -it --name ritu ubuntu  /bin/bash
  295  docker ps
  296  docker exec -it c90594e89195 /bin/bash
  297  docker ps
  298  docker stop great_tharp
  299  docekr ps
  300  docker ps
  301  docker ps -a
  302  docker start great_tharp
  303  docker ps
  304  dcoekr kill c90594e89195
  305  dcocker kill c90594e89195
  306  docker ps
  307  docker kill c90594e89195
  308  docker ps
  309  docker ps -a
  310  docker rm c90594e89195
  311  docker ps -a
  312  docker images
  313  docker pull httpd
  314  docker ps
  315  docker images
  316  docker rmi httpd:latest
  317  docker images
  318  sleep 10
  319  sleep 10 &
  320  ps -ef | grep -i docker
  321  docker ps
  322  dpcker pull mysql
  323  docker pull mysql
  324  docker images
  325  docker run -d -p 80:80 httpd
  326  docker ps
  327  ifocnfig
  328  ifconfig
  329  docker ps
  330  docker exec -it 54265186d98c /bin/bash
  331  docker ps
  332  docker stop 54265186d98c
  333  docker start 54265186d98c
  334  netstat -tunlp
  335  ps -ef | grep -i 11452
  336  docker run -d -p 8080:80 httpd
  337  docker ps
  338  history




 341  docker ps
  342  docker images
  343  docker run -d -it ubuntu --name apache /bin/bash
  344  docker run -d -it --name apache ubuntu /bin/bash
  345  docker ps
  346  docker exec -it 68ab28f89b3f /bin/bash
  347  docker ps
  348  docker commit 68ab28f89b3f ankushgupta0727/apache2test
  349  docker images
  350  docker run -d -it --name apacehe2test ankushgupta0727/apache2test
  351  docker ps
  352  docker exec -it c0aa3f98c228 /bin/bash
  353  history
  354  docker images
  355  docker ps
  356  docker login
  357  docker push ankushgupta0727/apache2test:latest
  358  docker commit 68ab28f89b3f apache2test1
  359  docker images
  360  docker push apache2test1
  361  docker tag apache2test1 ankushgupta0727/apache2test1:v0.1
  362  docker images
  363  docker push ankushgupta0727/apache2test1:v0.1
  364  docker tag apache2test1 ankushgupta0727/apache2test1:v0.2
  365  docker push ankushgupta0727/apache2test1:v0.2
  366  docker pull registry
  367  docker images
  368  docker run -d -p 5000:5000 --name privateregistry registry
  369  docker ps
  370  docker tag apache2test1 localhost:5000/apache2test1:v0.2
  371  docker images
  372  docker push localhost:5000/apache2test1
  373  docker images
  374  docker rmi -f ankushgupta0727/apache2test1  ankushgupta0727/apache2test1 apache2test1 5000/apache2test1  ankushgupta0727/apache2test
  375  docker images
  376  docker rmi localhost:5000/apache2test1:v0.2
  377  docker images
  378  docker rmi ankushgupta0727/apache2test1:v0.1 ankushgupta0727/apache2test1:v0.2
  379  docker images
  380  docker ps
  381  docker pull localhost:5000/apache2test1:v0.2
  382  docker images
  383  docker run -d -it localhost:5000/apache2test1:v0.2 /bin/bash
  384  docker ps
  385  history
  386  docker images
  387  docker search ubuntu
  388  docker pull ubuntu:xenial-20200916
  389  docker images
  390  docker run -d ubuntu
  391  docker ps
  392  docker ps -a
  393  hist`
  394  history
  395  ls-l
  396  mkdir dockerdemo
  397  cd dockerdemo/
  398  ls -l
  399  vim Dockerfile
  400  docker build -t apache2dockerfile .
  401  vim Dockerfile
  402  docker build -t apache2dockerfile .
  403  vim Dockerfile
  404  docker build -t apache2dockerfile .
  405  vim Dockerfile
  406  docker build -t apache2dockerfile .
  407  vim Dockerfile
  408  docker build -t apache2dockerfile .
  409  vim Dockerfile
  410  ls -l
  411  echo "hello DevOps" > index.html
  412  docker build -t apache2dockerfile .
  413  docker images
  414  docker run -d -p 80:80 apache2dockerfile
  415  docker ps
  416  docker logs ddd4c564021bc9d752d1ea01384e21a89e0690a31ff93ddfbf387f64d538f27d
  417  docker ps\
  418  docker ps
  419  docker run -d -it apache2dockerfile /bin/bash
  420  docker ps
  421  docker exec -it a5ed1c5b9adc /bin/bash
  422  vim Dockerfile
  423  docker build -t apache2dockerfile .
  424  docker run -d -p 80:80 apache2dockerfile
  425  docker ps
  426  docker logs d35eac64d899e8122d120c0eee141037d06b0c26adac7bed5579b657f1b344cb
  427  docker build -t apache2dockerfile .
  428  docker exec -it a5ed1c5b9adc /bin/bash
  429  docker ps
  430  vim Dockerfile
  431  docker build -t apache2dockerfile .
  432  docker run -d -p 80:80 apache2dockerfile
  433  docker ps
  434  docker logs 52f4e5470c1fe7082449785deb9ae66f5742b68d9131807d1540e6fa067a377f
  435  vim Dockerfile
  436  docker build -t apache2dockerfile .
  437  docker run -d -p 80:80 apache2dockerfile
  438  docker ps
  439  docker logs 3f2b04db243106a97061ced25c04fb5d4fcfd871dc1b9b5f36a5fdf7190eae77
  440  vim Dockerfile
  441  docker build -t apache2dockerfile .
  442  docker run -d -p 80:80 apache2dockerfile
  443  docker logs
  444  docker ps
  445  docker run -d -it -p 81:80 apache2dockerfile /bin/bash
  446  docker logs
  447  docker ps
  448  vim Dockerfile
  449  docker build -t apache2dockerfileentrypoint .
  450  docker run -d -it -p 82:80 apache2dockerfileentrypoint /bin/bash
  451  docker ps
  452  docker logs f776e36d5e7306fc920ddd6a3d7664a8f67eae12b8a9fea2baaefc512126af45
  453  vim Dockerfile
  454  docker build -t apache2dockerfileentrypoint .
  455  docker run -d -it -p 82:80 apache2dockerfileentrypoint /bin/bash
  456  vim Dockerfile
  457  docker build -t apache2dockerfileentrypoint .
  458  docker run -d -it -p 82:80 apache2dockerfileentrypoint /bin/bash
  459  vim Dockerfile
  460  vi entrypoint
  461  docker exec -it a5ed1c5b9adc /bin/bash
  462  vim Dockerfile
  463  vim entrypoint
  464  vim Dockerfile
  465  docker build -t apache2dockerfileentrypoint .
  466  docker run -d -it -p 82:80 apache2dockerfileentrypoint /bin/bash
  467  docke rps
  468  docker ps
  469  docker logs d59ffb99e331b40e7997610e37c7bfc0b8114e1033cf7a2c7d914a9aa964550c
  470  vim Dockerfile
  471  history


  2  apt-get update
    3  sudo apt-get remove docker docker-engine docker.io containerd runc
    4  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    5  add-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
    6     $(lsb_release -cs) \
    7     stable"
    8  apt-get install docker-ce docker-ce-cli containerd.io
    9  sudo docker run hello-world
   10  vim Dockerfile
   11  docker build -t apache .
   12  docker run -it apache  /bin/bash
   13  vim Dockerfile
   14  docker build -t apache .
   15  vim Dockerfile
   16  docker build -t apache .
   17  docker run -it apache  /bin/bash
   18  vim Dockerfile
   19  docker run -it apache  /bin/bash
   20  docker build -t apache .
   21  docker run -it apache  /bin/bash
   22  docker run -d -it apache
   23  docker ps
   24  ls -l
   25  vim Dockerfile
   26  echo "hello world" > index.html
   27  docker build -r apacheentrypoint .
   28  docker build -t apacheentrypoint .
   29  docker images
   30  docker run -d --name apache apacheentrypoint
   31  docker ps
   32  docker run  -it  --name apache apacheentrypoint /bin/bash
   33  docker run  -it  --name apache1 apacheentrypoint /bin/bash
   34  vim Dockerfile
   35  docker build -t apachecmd .
   36  docker run -d --name apache apachecmd
   37  docker run -d --name apache2 apachecmd
   38  docker ps
   39  docker run -it --name apache3 apachecmd /bin/bash
   40  docker run -d --name apache2 -p 80:80 apachecmd
   41  docker run -d --name apache4 -p 80:80 apachecmd
   42  vim Dockerfile
   43  docker build -t apachecompress .
   44  docker images
   45  docker run  -it  --name apache5 apacheentrypoint /bin/bash
   46  docker run -it --name apache6 apachecmd /bin/bash
   47  vim Dockerfile
   48  docker volume
   49  docker volume ls
   50  cd /var/lib/docker/
   51  ls- l
   52  ls -l
   53  cd plugins/
   54  ls -l
   55  cd ..
   56  ls -l
   57  cd volumes/
   58  ls -l
   59  cd ..
   60  ls -l
   61  docker volume create demovol
   62  ls -l
   63  cd volumes/
   64  ls -l
   65  cd demovol/
   66  ls- l
   67  ls -l
   68  cd _data/
   69  ls -l
   70  cd ../..
   71  docker run -d -it --mount source=demovol,destination=/tmp ubuntu /bin/bash
   72  docker ps
   73  docker exec -it 624dc3f572e1 /bin/bash
   74  cd demovol/_data/
   75  ls -l
   76  docker ps
   77  docker rm 624dc3f572e1
   78  docker rm 624dc3f572e1 -f
   79  docker ps
   80  ls -l
   81  cd
   82  mkdir /data
   83  ls -l
   84  ls -l /
   85  docker run -d -it -v /data:/tmp ubuntu /bin/bash
   86  docker ps
   87  docker exec -it 8ab199db87f0 /bin/bash
   88  cd /data
   89  ls -l
   90  touch 1 2 3 4 5 6
   91  docker exec -it 8ab199db87f0 /bin/bash
   92  df -h
   93  docker exec -it 8ab199db87f0 /bin/bash
   94  cd
   95  docker ps
   96  docker run -d -it --name container1 ubuntu
   97  docker ps
   98  vi /etc/hosts
   99  docker run -d -it --link container1 --name container2 ubuntu
  100  docker ps
  101  docker exec -it 3c22baf054fb /bin/bash
  102  hostname
  103  ufocnfig
  104  ifocnfig
  105  ifconfig
  106  docker ps
  107  curl -L https://github.com/docker/compose/releases/download/1.14.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
  108  chmod +x /usr/local/bin/docker-compose
  109  docker-compose version
  110  vim docker-compose.yml
  111  docker-compose up
  112  docker ps
  113  docker-compose stop
  114  vim docker-compose.yml
  115  docker-compose up
  116  docker-compose  -d up
  117  docker-compose up -d
  118  docker ps
  119  docker network ls
  120  docker network inspect 7ce11d49134d
  121  docker network create --driver bridge bridge1
  122  docker network ls
  123  docker network inspect 6974c421d5d5
  124  docker run -it --network=bridge1 ubuntu /bin/bash
  125  ls -
  126  ldocker ps
  127  docker ps
  128  docker inspect 3ad9454b31b9
  129  docker  --help
  130  docker run --help
  131  history
  132  vim docker-compose.yml
  133  history

root@instance-2:~# cat Dockerfile
FROM ubuntu:xenial-20200916

RUN apt-get update &&  apt-get install -y apache2
ADD index.html /var/www/html
EXPOSE 80
ENV Name DevOps

#CMD  apachectl -D FOREGROUND
ENTRYPOINT apachectl "-DFOREGOUND"

root@instance-2:~# cat docker-compose.yml
version: '3'
services:
  apachedemo:
    image: httpd
    ports:
      - "82:80"
  nginx:
    image: nginx
    ports:
      - "81:80"


  173  cd /etc/ansible/
  174  ls -l
  175  vi ansible.cfg 
  176  vi hosts 
  177  vi ansible.cfg 
  178  pwd
  179  ssh-keygen 
  180  cd .ssh
  181  cd 
  182  cd .ssh
  183  ls -l
  184  ssh instance-3
  185  cat id_rsa.pub 
  186  ssh instance-3
  187  ansible instance-3 -m ping
  188  ansible localhost -m ping
  189  cd
  190  cd //etc/ansible/
  191  vi hosts 
  192  ansible instance-3 -m ping
  193  ansible instance-3 -m shell -a 'df -h'
  194  cd
  195  /etc/ansible/
  196* cd /etc/ansibl
  197  ansible instance-3 -m apt -a "name = telnet state = present"
  198  ansible instance-3 -m package -a "name = telnet state = present"
  199  ansible instance-3 -m package -a "name = telnet state = latest"
  200  ansible instance-3 -m package -a "name=telnet"
  201  ansible instance-3 -m setup
  202  ansible localhost -m package -a "name=telnet"
  203  ansible localhost connectio_type=local -m package -a "name=telnet"
  204  ansible localhost connection_type=local -m package -a "name=telnet"
  205  ansible localhost  --connection=local -m package -a "name=telnet"
  206  ansible localhost connection_type=local -m package -a "name=telnet"
  207  ansible localhost --connection=local -m package -a "name=telnet"
  208  vim  demo1.yml
  209  ansible-playbook demo1.yml --syntax-check
  210  cat demo1.yml 
  211  cat hosts
  212  cat demo1.yml 
  213  ansible-playbook demo1.yml 
